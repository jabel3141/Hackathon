{"version":3,"sources":["database/core/src/database/core/snap/indexes/PriorityIndex.ts","database/core/snap/indexes/PriorityIndex.js"],"names":["setNodeFromJSON","setMaxNode","__extends","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","nodeFromJSON","MAX_NODE","val","PriorityIndex","_super","apply","arguments","compare","a","aPriority","node","getPriority","bPriority","indexCmp","compareTo","name","isDefinedOn","isEmpty","indexedValueChanged","oldNode","newNode","equals","minPost","MIN","maxPost","makePost","indexValue","priorityNode","toString","PRIORITY_INDEX"],"mappings":"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","file":"PriorityIndex.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { Index } from './Index';\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { LeafNode } from '../LeafNode';\n\nlet nodeFromJSON: (a: any) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: any) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\n/**\n * @constructor\n * @extends {Index}\n * @private\n */\nexport class PriorityIndex extends Index {\n  /**\n   * @inheritDoc\n   */\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n\n  /**\n   * @inheritDoc\n   */\n  minPost(): NamedNode {\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  /**\n   * @param {*} indexValue\n   * @param {string} name\n   * @return {!NamedNode}\n   */\n  makePost(indexValue: any, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @return {!string} String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Index } from './Index';\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { NamedNode } from '../Node';\nimport { LeafNode } from '../LeafNode';\nvar nodeFromJSON;\nvar MAX_NODE;\nexport function setNodeFromJSON(val) {\n    nodeFromJSON = val;\n}\nexport function setMaxNode(val) {\n    MAX_NODE = val;\n}\n/**\n * @constructor\n * @extends {Index}\n * @private\n */\nvar PriorityIndex = (function (_super) {\n    __extends(PriorityIndex, _super);\n    function PriorityIndex() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.compare = function (a, b) {\n        var aPriority = a.node.getPriority();\n        var bPriority = b.node.getPriority();\n        var indexCmp = aPriority.compareTo(bPriority);\n        if (indexCmp === 0) {\n            return nameCompare(a.name, b.name);\n        }\n        else {\n            return indexCmp;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.isDefinedOn = function (node) {\n        return !node.getPriority().isEmpty();\n    };\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n        return !oldNode.getPriority().equals(newNode.getPriority());\n    };\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.minPost = function () {\n        return NamedNode.MIN;\n    };\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.maxPost = function () {\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n    };\n    /**\n     * @param {*} indexValue\n     * @param {string} name\n     * @return {!NamedNode}\n     */\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\n        var priorityNode = nodeFromJSON(indexValue);\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n    };\n    /**\n     * @return {!string} String representation for inclusion in a query spec\n     */\n    PriorityIndex.prototype.toString = function () {\n        return '.priority';\n    };\n    return PriorityIndex;\n}(Index));\nexport { PriorityIndex };\nexport var PRIORITY_INDEX = new PriorityIndex();\n\n\n"]}