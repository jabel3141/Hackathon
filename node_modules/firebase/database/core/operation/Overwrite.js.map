{"version":3,"sources":["database/src/database/core/operation/Overwrite.ts","database/core/operation/Overwrite.js"],"names":["Overwrite","source","path","snap","type","OVERWRITE","prototype","operationForChild","childName","isEmpty","Empty","getImmediateChild","popFront"],"mappings":";;;;;;;AAgBA;;AACA;;AAGA;;;;;;;AApBA;;;;;;;;;;;;;;;AA2BA,IAAAA,YAAA,YAAA;AAIE,aAAAA,SAAA,CACSC,MADT,EAESC,IAFT,EAGSC,IAHT,EAGmB;AAFV,aAAAF,MAAA,GAAAA,MAAA;AACA,aAAAC,IAAA,GAAAA,IAAA;AACA,aAAAC,IAAA,GAAAA,IAAA;AANT;AACA,aAAAC,IAAA,GAAO,yBAAcC,SAArB;AAMI;AAEJL,cAAAM,SAAA,CAAAC,iBAAA,GAAA,UAAkBC,SAAlB,EAAmC;AACjC,YAAI,KAAKN,IAAL,CAAUO,OAAV,EAAJ,EAAyB;AACvB,mBAAO,IAAIT,SAAJ,CACL,KAAKC,MADA,EAEL,WAAKS,KAFA,EAGL,KAAKP,IAAL,CAAUQ,iBAAV,CAA4BH,SAA5B,CAHK,CAAP;AAKD,SAND,MAMO;AACL,mBAAO,IAAIR,SAAJ,CAAc,KAAKC,MAAnB,EAA2B,KAAKC,IAAL,CAAUU,QAAV,EAA3B,EAAiD,KAAKT,IAAtD,CAAP;AACD;AACF,KAVD;AAWF,WAAAH,SAAA;AArBA,CAAA,EAAA;QCeSA,S,GAAAA,S","file":"Overwrite.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Path } from '../util/Path';\nimport { Node } from '../snap/Node';\n\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @param {!Node} snap\n * @constructor\n * @implements {Operation}\n */\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (this.path.isEmpty()) {\n      return new Overwrite(\n        this.source,\n        Path.Empty,\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, this.path.popFront(), this.snap);\n    }\n  }\n}\n","/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nimport { OperationType } from './Operation';\nimport { Path } from '../util/Path';\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @param {!Node} snap\n * @constructor\n * @implements {Operation}\n */\nvar Overwrite = (function () {\n    function Overwrite(source, path, snap) {\n        this.source = source;\n        this.path = path;\n        this.snap = snap;\n        /** @inheritDoc */\n        this.type = OperationType.OVERWRITE;\n    }\n    Overwrite.prototype.operationForChild = function (childName) {\n        if (this.path.isEmpty()) {\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\n        }\n        else {\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\n        }\n    };\n    return Overwrite;\n}());\nexport { Overwrite };\n\n\n"]}