{"version":3,"sources":["database/src/database/core/stats/StatsListener.ts","database/core/stats/StatsListener.js"],"names":["StatsListener","collection_","last_","prototype","get","newStats","delta","stat","value"],"mappings":";;;;;;;AAgBA;;AAGA;;;;;;AAMA,IAAAA,gBAAA,YAAA;AAGE,aAAAA,aAAA,CAAoBC,WAApB,EAAgD;AAA5B,aAAAA,WAAA,GAAAA,WAAA;AAFZ,aAAAC,KAAA,GAAwC,IAAxC;AAE4C;AAEpDF,kBAAAG,SAAA,CAAAC,GAAA,GAAA,YAAA;AACE,YAAMC,WAAW,KAAKJ,WAAL,CAAiBG,GAAjB,EAAjB;AAEA,YAAME,QAAyB,gBAAMD,QAAN,CAA/B;AACA,YAAI,KAAKH,KAAT,EAAgB;AACd,8BAAQ,KAAKA,KAAb,EAAoB,UAACK,IAAD,EAAeC,KAAf,EAA4B;AAC9CF,sBAAMC,IAAN,IAAcD,MAAMC,IAAN,IAAcC,KAA5B;AACD,aAFD;AAGD;AACD,aAAKN,KAAL,GAAaG,QAAb;AAEA,eAAOC,KAAP;AACD,KAZD;AAaF,WAAAN,aAAA;AAlBA,CAAA,EAAA,C,CAzBA;;;;;;;;;;;;;;;QCwCSA,a,GAAAA,a","file":"StatsListener.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { clone, forEach } from '../../../utils/obj';\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ The collection to \"listen\" to.\n * @constructor\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta: typeof newStats = clone(newStats);\n    if (this.last_) {\n      forEach(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nimport { clone, forEach } from '../../../utils/obj';\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ The collection to \"listen\" to.\n * @constructor\n */\nvar StatsListener = (function () {\n    function StatsListener(collection_) {\n        this.collection_ = collection_;\n        this.last_ = null;\n    }\n    StatsListener.prototype.get = function () {\n        var newStats = this.collection_.get();\n        var delta = clone(newStats);\n        if (this.last_) {\n            forEach(this.last_, function (stat, value) {\n                delta[stat] = delta[stat] - value;\n            });\n        }\n        this.last_ = newStats;\n        return delta;\n    };\n    return StatsListener;\n}());\nexport { StatsListener };\n\n\n"]}