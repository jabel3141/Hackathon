{"version":3,"sources":["database/src/database/core/view/Event.ts","database/core/view/Event.js"],"names":["DataEvent","eventType","eventRegistration","snapshot","prevName","prototype","getPath","ref","getRef","path","getParent","getEventType","getEventRunner","toString","exportVal","CancelEvent","error"],"mappings":";;;;;;;AAgBA;;AA+BA;;;;AAIA,IAAAA,YAAA,YAAA;AACE;;;;;;AAMA,aAAAA,SAAA,CACSC,SADT,EAOSC,iBAPT,EAQSC,QART,EASSC,QATT,EASiC;AARxB,aAAAH,SAAA,GAAAA,SAAA;AAMA,aAAAC,iBAAA,GAAAA,iBAAA;AACA,aAAAC,QAAA,GAAAA,QAAA;AACA,aAAAC,QAAA,GAAAA,QAAA;AACL;AAEJ;;;AAGAJ,cAAAK,SAAA,CAAAC,OAAA,GAAA,YAAA;AACE,YAAMC,MAAM,KAAKJ,QAAL,CAAcK,MAAd,EAAZ;AACA,YAAI,KAAKP,SAAL,KAAmB,OAAvB,EAAgC;AAC9B,mBAAOM,IAAIE,IAAX;AACD,SAFD,MAEO;AACL,mBAAOF,IAAIG,SAAJ,GAAgBD,IAAvB;AACD;AACF,KAPD;AASA;;;AAGAT,cAAAK,SAAA,CAAAM,YAAA,GAAA,YAAA;AACE,eAAO,KAAKV,SAAZ;AACD,KAFD;AAIA;;;AAGAD,cAAAK,SAAA,CAAAO,cAAA,GAAA,YAAA;AACE,eAAO,KAAKV,iBAAL,CAAuBU,cAAvB,CAAsC,IAAtC,CAAP;AACD,KAFD;AAIA;;;AAGAZ,cAAAK,SAAA,CAAAQ,QAAA,GAAA,YAAA;AACE,eACE,KAAKP,OAAL,GAAeO,QAAf,KACA,GADA,GAEA,KAAKZ,SAFL,GAGA,GAHA,GAIA,qBAAU,KAAKE,QAAL,CAAcW,SAAd,EAAV,CALF;AAOD,KARD;AASF,WAAAd,SAAA;AAzDA,CAAA,EAAA,C,CAnDA;;;;;;;;;;;;;;;QCqESA,S,GAAAA,S;;ADyCT,IAAAe,cAAA,YAAA;AACE;;;;;AAKA,aAAAA,WAAA,CACSb,iBADT,EAESc,KAFT,EAGSP,IAHT,EAGmB;AAFV,aAAAP,iBAAA,GAAAA,iBAAA;AACA,aAAAc,KAAA,GAAAA,KAAA;AACA,aAAAP,IAAA,GAAAA,IAAA;AACL;AAEJ;;;AAGAM,gBAAAV,SAAA,CAAAC,OAAA,GAAA,YAAA;AACE,eAAO,KAAKG,IAAZ;AACD,KAFD;AAIA;;;AAGAM,gBAAAV,SAAA,CAAAM,YAAA,GAAA,YAAA;AACE,eAAO,QAAP;AACD,KAFD;AAIA;;;AAGAI,gBAAAV,SAAA,CAAAO,cAAA,GAAA,YAAA;AACE,eAAO,KAAKV,iBAAL,CAAuBU,cAAvB,CAAsC,IAAtC,CAAP;AACD,KAFD;AAIA;;;AAGAG,gBAAAV,SAAA,CAAAQ,QAAA,GAAA,YAAA;AACE,eAAO,KAAKJ,IAAL,CAAUI,QAAV,KAAuB,SAA9B;AACD,KAFD;AAGF,WAAAE,WAAA;AAvCA,CAAA,EAAA;QCHSA,W,GAAAA,W","file":"Event.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { stringify } from '../../../utils/json';\nimport { Path } from '../util/Path';\nimport { EventRegistration } from './EventRegistration';\nimport { DataSnapshot } from '../../api/DataSnapshot';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  /**\n   * @return {!Path}\n   */\n  getPath(): Path;\n\n  /**\n   * @return {!string}\n   */\n  getEventType(): string;\n\n  /**\n   * @return {!function()}\n   */\n  getEventRunner(): () => void;\n\n  /**\n   * @return {!string}\n   */\n  toString(): string;\n}\n\n/**\n * Encapsulates the data needed to raise an event\n * @implements {Event}\n */\nexport class DataEvent implements Event {\n  /**\n   * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\n   * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\n   * @param {!DataSnapshot} snapshot The data backing the event\n   * @param {?string=} prevName Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType:\n      | 'value'\n      | ' child_added'\n      | ' child_changed'\n      | ' child_moved'\n      | ' child_removed',\n    public eventRegistration: EventRegistration,\n    public snapshot: DataSnapshot,\n    public prevName?: string | null\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  getPath(): Path {\n    const ref = this.snapshot.getRef();\n    if (this.eventType === 'value') {\n      return ref.path;\n    } else {\n      return ref.getParent().path;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventType(): string {\n    return this.eventType;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  /**\n   * @param {EventRegistration} eventRegistration\n   * @param {Error} error\n   * @param {!Path} path\n   */\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  getPath(): Path {\n    return this.path;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventType(): string {\n    return 'cancel';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nimport { stringify } from '../../../utils/json';\n/**\n * Encapsulates the data needed to raise an event\n * @implements {Event}\n */\nvar DataEvent = (function () {\n    /**\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\n     * @param {!DataSnapshot} snapshot The data backing the event\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\n     */\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n        this.eventType = eventType;\n        this.eventRegistration = eventRegistration;\n        this.snapshot = snapshot;\n        this.prevName = prevName;\n    }\n    /**\n     * @inheritDoc\n     */\n    DataEvent.prototype.getPath = function () {\n        var ref = this.snapshot.getRef();\n        if (this.eventType === 'value') {\n            return ref.path;\n        }\n        else {\n            return ref.getParent().path;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DataEvent.prototype.getEventType = function () {\n        return this.eventType;\n    };\n    /**\n     * @inheritDoc\n     */\n    DataEvent.prototype.getEventRunner = function () {\n        return this.eventRegistration.getEventRunner(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    DataEvent.prototype.toString = function () {\n        return (this.getPath().toString() +\n            ':' +\n            this.eventType +\n            ':' +\n            stringify(this.snapshot.exportVal()));\n    };\n    return DataEvent;\n}());\nexport { DataEvent };\nvar CancelEvent = (function () {\n    /**\n     * @param {EventRegistration} eventRegistration\n     * @param {Error} error\n     * @param {!Path} path\n     */\n    function CancelEvent(eventRegistration, error, path) {\n        this.eventRegistration = eventRegistration;\n        this.error = error;\n        this.path = path;\n    }\n    /**\n     * @inheritDoc\n     */\n    CancelEvent.prototype.getPath = function () {\n        return this.path;\n    };\n    /**\n     * @inheritDoc\n     */\n    CancelEvent.prototype.getEventType = function () {\n        return 'cancel';\n    };\n    /**\n     * @inheritDoc\n     */\n    CancelEvent.prototype.getEventRunner = function () {\n        return this.eventRegistration.getEventRunner(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CancelEvent.prototype.toString = function () {\n        return this.path.toString() + ':cancel';\n    };\n    return CancelEvent;\n}());\nexport { CancelEvent };\n\n\n"]}