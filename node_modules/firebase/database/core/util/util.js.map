{"version":3,"sources":["database/src/database/core/util/util.ts","database/core/util/util.js"],"names":["setBufferImpl","LUIDGenerator","id","base64Encode","str","utf8Bytes","encodeByteArray","BufferImpl","impl","base64Decode","toString","decodeString","e","log","sha1","update","sha1Bytes","digest","buildLogMessage_","var_args","_i","arguments","length","message","i","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","console","bind","set","remove","get","logWrapper","prefix","concat","error","fatal","Error","warn","warnIfPageIsSecure","window","location","protocol","indexOf","warnAboutUnsupportedMethod","methodName","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","fn","document","readyState","called_1","wrappedFn_1","body","setTimeout","Math","floor","addEventListener","attachEvent","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","key","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","val","bindCallback","callback","context","doubleToIEEE754String","v","ebits","fbits","bias","s","f","ln","bits","Infinity","abs","pow","min","LN2","round","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","isChromeExtensionContentScript","test","href","isWindowsStoreApp","Windows","UI","errorForServerCode","code","query","reason","path","toUpperCase","INTEGER_REGEXP_","RegExp","intVal","exceptionGuard","stack","callUserCallback","beingCrawled","userAgent","search","exportPropGetter","object","name","fnGet","Object","defineProperty","setTimeoutNonBlocking","time","timeout"],"mappings":"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","file":"util.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { Query } from '../../api/Query';\n\ndeclare const window: any;\ndeclare const Windows: any;\n\nimport { assert } from '../../../utils/assert';\nimport { forEach } from '../../../utils/obj';\nimport { base64 } from '../../../utils/crypt';\nimport { Sha1 } from '../../../utils/Sha1';\nimport { stringToByteArray } from '../../../utils/utf8';\nimport { stringify } from '../../../utils/json';\nimport { SessionStorage } from '../storage/storage';\nimport { isNodeSdk } from '../../../utils/environment';\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n * @type {function(): number} Generated ID.\n */\nexport const LUIDGenerator: (() => number) = (function() {\n  let id = 1;\n  return function() {\n    return id++;\n  };\n})();\n\n/**\n * URL-safe base64 encoding\n * @param {!string} str\n * @return {!string}\n */\nexport const base64Encode = function(str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, /*useWebSafe=*/ true);\n};\n\nlet BufferImpl;\nexport function setBufferImpl(impl) {\n  BufferImpl = impl;\n}\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param {string} str To be decoded\n * @return {?string} Decoded result, if possible\n */\nexport const base64Decode = function(str: string): string | null {\n  try {\n    if (BufferImpl) {\n      return new BufferImpl(str, 'base64').toString('utf8');\n    } else {\n      return base64.decodeString(str, /*useWebSafe=*/ true);\n    }\n  } catch (e) {\n    log('base64Decode failed: ', e);\n  }\n  return null;\n};\n\n/**\n * Sha1 hash of the input string\n * @param {!string} str The string to hash\n * @return {!string} The resulting hash\n */\nexport const sha1 = function(str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\n/**\n * @param {...*} var_args\n * @return {string}\n * @private\n */\nconst buildLogMessage_ = function(...var_args: any[]): string {\n  let message = '';\n  for (let i = 0; i < var_args.length; i++) {\n    if (\n      Array.isArray(var_args[i]) ||\n      (var_args[i] &&\n        typeof var_args[i] === 'object' &&\n        typeof var_args[i].length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, var_args[i]);\n    } else if (typeof var_args[i] === 'object') {\n      message += stringify(var_args[i]);\n    } else {\n      message += var_args[i];\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n * @type {?function(string)}\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n * @type {boolean}\n * @private\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function(\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || (logger_ === true || logger_ === false),\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    if (typeof console !== 'undefined') {\n      if (typeof console.log === 'function') {\n        logger = console.log.bind(console);\n      } else if (typeof console.log === 'object') {\n        // IE does this.\n        logger = function(message) {\n          console.log(message);\n        };\n      }\n    }\n    if (persistent) SessionStorage.set('logging_enabled', true);\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\n/**\n *\n * @param {...(string|Arguments)} var_args\n */\nexport const log = function(...var_args: string[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true)\n      enableLogging(true);\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, var_args);\n    logger(message);\n  }\n};\n\n/**\n * @param {!string} prefix\n * @return {function(...[*])}\n */\nexport const logWrapper = function(\n  prefix: string\n): (...var_args: any[]) => void {\n  return function(...var_args: any[]) {\n    log(prefix, ...var_args);\n  };\n};\n\n/**\n * @param {...string} var_args\n */\nexport const error = function(...var_args: string[]) {\n  if (typeof console !== 'undefined') {\n    const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...var_args);\n    if (typeof console.error !== 'undefined') {\n      console.error(message);\n    } else {\n      console.log(message);\n    }\n  }\n};\n\n/**\n * @param {...string} var_args\n */\nexport const fatal = function(...var_args: string[]) {\n  const message = buildLogMessage_(...var_args);\n  throw new Error('FIREBASE FATAL ERROR: ' + message);\n};\n\n/**\n * @param {...*} var_args\n */\nexport const warn = function(...var_args: any[]) {\n  if (typeof console !== 'undefined') {\n    const message = 'FIREBASE WARNING: ' + buildLogMessage_(...var_args);\n    if (typeof console.warn !== 'undefined') {\n      console.warn(message);\n    } else {\n      console.log(message);\n    }\n  }\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function() {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\n/**\n * @param {!String} methodName\n */\nexport const warnAboutUnsupportedMethod = function(methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n * @param {*} data\n * @return {boolean}\n */\nexport const isInvalidJSONNumber = function(data: any): boolean {\n  return (\n    typeof data === 'number' &&\n    (data != data || // NaN\n      data == Number.POSITIVE_INFINITY ||\n      data == Number.NEGATIVE_INFINITY)\n  );\n};\n\n/**\n * @param {function()} fn\n */\nexport const executeWhenDOMReady = function(fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    let wrappedFn = function() {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n    } else if ((document as any).attachEvent) {\n      // IE.\n      (document as any).attachEvent('onreadystatechange', function() {\n        if (document.readyState === 'complete') wrappedFn();\n      });\n      // fallback to onload.\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n * @type {!string}\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n * @type {!string}\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n * @param {!string} a\n * @param {!string} b\n * @return {!number}\n */\nexport const nameCompare = function(a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @param {!string} a\n * @param {!string} b\n * @return {!number} comparison result.\n */\nexport const stringCompare = function(a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n/**\n * @param {string} key\n * @param {Object} obj\n * @return {*}\n */\nexport const requireKey = function(\n  key: string,\n  obj: { [k: string]: any }\n): any {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\n/**\n * @param {*} obj\n * @return {string}\n */\nexport const ObjectToUniqueKey = function(obj: any): string {\n  if (typeof obj !== 'object' || obj === null) return stringify(obj);\n\n  const keys = [];\n  for (let k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) key += ',';\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param {!string} str The string\n * @param {!number} segsize The maximum number of chars in the string.\n * @return {Array.<string>} The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function(\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param {!(Object|Array)} obj The object or array to iterate over\n * @param {function(?, ?)} fn The function to apply\n */\nexport const each = function(\n  obj: Object | Array<any>,\n  fn: (v?: any, k?: any) => void\n) {\n  if (Array.isArray(obj)) {\n    for (let i = 0; i < obj.length; ++i) {\n      fn(i, obj[i]);\n    }\n  } else {\n    /**\n     * in the conversion of code we removed the goog.object.forEach\n     * function which did a value,key callback. We standardized on\n     * a single impl that does a key, value callback. So we invert\n     * to not have to touch the `each` code points\n     */\n    forEach(obj, (key: any, val: any) => fn(val, key));\n  }\n};\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param {function(*)} callback Callback function.\n * @param {?Object=} context Optional context to bind to.\n * @return {function(*)}\n */\nexport const bindCallback = function(\n  callback: (a: any) => void,\n  context?: object | null\n): Function {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param {!number} v A double\n * @return {string}\n */\nexport const doubleToIEEE754String = function(v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  let bias = (1 << (ebits - 1)) - 1,\n    s,\n    e,\n    f,\n    ln,\n    i,\n    bits,\n    str;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) hexByte = '0' + hexByte;\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n * @return {boolean}\n */\nexport const isChromeExtensionContentScript = function(): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n * @return {boolean}\n */\nexport const isWindowsStoreApp = function(): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n * @param {!string} code\n * @param {!Query} query\n * @return {Error}\n */\nexport const errorForServerCode = function(code: string, query: Query): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code == 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code == 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query.path.toString() + ': ' + reason\n  );\n  (error as any).code = code.toUpperCase();\n  return error;\n};\n\n/**\n * Used to test for integer-looking strings\n * @type {RegExp}\n * @private\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n * @param {!string} str\n * @return {?number}\n */\nexport const tryParseInt = function(str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= -2147483648 && intVal <= 2147483647) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param {!function()} fn The code to guard.\n */\nexport const exceptionGuard = function(fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(function() {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param {?Function=} callback Optional onComplete callback.\n * @param {...*} var_args Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function(\n  callback?: Function | null,\n  ...var_args: any[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(function() {\n      callback(...var_args);\n    });\n  }\n};\n\n/**\n * @return {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function(): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n *\n * @param {!Object} object\n * @param {string} name\n * @param {!function(): *} fnGet\n */\nexport const exportPropGetter = function(\n  object: Object,\n  name: string,\n  fnGet: () => any\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param {Function} fn Function to run.\n * @param {number} time Milliseconds to wait before running.\n * @return {number|Object} The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function(\n  fn: Function,\n  time: number\n): number | Object {\n  const timeout: number | Object = setTimeout(fn, time);\n  if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    (timeout as any)['unref']();\n  }\n  return timeout;\n};\n","/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nimport { assert } from '../../../utils/assert';\nimport { forEach } from '../../../utils/obj';\nimport { base64 } from '../../../utils/crypt';\nimport { Sha1 } from '../../../utils/Sha1';\nimport { stringToByteArray } from '../../../utils/utf8';\nimport { stringify } from '../../../utils/json';\nimport { SessionStorage } from '../storage/storage';\nimport { isNodeSdk } from '../../../utils/environment';\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n * @type {function(): number} Generated ID.\n */\nexport var LUIDGenerator = (function () {\n    var id = 1;\n    return function () {\n        return id++;\n    };\n})();\n/**\n * URL-safe base64 encoding\n * @param {!string} str\n * @return {!string}\n */\nexport var base64Encode = function (str) {\n    var utf8Bytes = stringToByteArray(str);\n    return base64.encodeByteArray(utf8Bytes, /*useWebSafe=*/ true);\n};\nvar BufferImpl;\nexport function setBufferImpl(impl) {\n    BufferImpl = impl;\n}\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param {string} str To be decoded\n * @return {?string} Decoded result, if possible\n */\nexport var base64Decode = function (str) {\n    try {\n        if (BufferImpl) {\n            return new BufferImpl(str, 'base64').toString('utf8');\n        }\n        else {\n            return base64.decodeString(str, /*useWebSafe=*/ true);\n        }\n    }\n    catch (e) {\n        log('base64Decode failed: ', e);\n    }\n    return null;\n};\n/**\n * Sha1 hash of the input string\n * @param {!string} str The string to hash\n * @return {!string} The resulting hash\n */\nexport var sha1 = function (str) {\n    var utf8Bytes = stringToByteArray(str);\n    var sha1 = new Sha1();\n    sha1.update(utf8Bytes);\n    var sha1Bytes = sha1.digest();\n    return base64.encodeByteArray(sha1Bytes);\n};\n/**\n * @param {...*} var_args\n * @return {string}\n * @private\n */\nvar buildLogMessage_ = function () {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    var message = '';\n    for (var i = 0; i < var_args.length; i++) {\n        if (Array.isArray(var_args[i]) ||\n            (var_args[i] &&\n                typeof var_args[i] === 'object' &&\n                typeof var_args[i].length === 'number')) {\n            message += buildLogMessage_.apply(null, var_args[i]);\n        }\n        else if (typeof var_args[i] === 'object') {\n            message += stringify(var_args[i]);\n        }\n        else {\n            message += var_args[i];\n        }\n        message += ' ';\n    }\n    return message;\n};\n/**\n * Use this for all debug messages in Firebase.\n * @type {?function(string)}\n */\nexport var logger = null;\n/**\n * Flag to check for log availability on first log message\n * @type {boolean}\n * @private\n */\nvar firstLog_ = true;\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\n */\nexport var enableLogging = function (logger_, persistent) {\n    assert(!persistent || (logger_ === true || logger_ === false), \"Can't turn on custom loggers persistently.\");\n    if (logger_ === true) {\n        if (typeof console !== 'undefined') {\n            if (typeof console.log === 'function') {\n                logger = console.log.bind(console);\n            }\n            else if (typeof console.log === 'object') {\n                // IE does this.\n                logger = function (message) {\n                    console.log(message);\n                };\n            }\n        }\n        if (persistent)\n            SessionStorage.set('logging_enabled', true);\n    }\n    else if (typeof logger_ === 'function') {\n        logger = logger_;\n    }\n    else {\n        logger = null;\n        SessionStorage.remove('logging_enabled');\n    }\n};\n/**\n *\n * @param {...(string|Arguments)} var_args\n */\nexport var log = function () {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    if (firstLog_ === true) {\n        firstLog_ = false;\n        if (logger === null && SessionStorage.get('logging_enabled') === true)\n            enableLogging(true);\n    }\n    if (logger) {\n        var message = buildLogMessage_.apply(null, var_args);\n        logger(message);\n    }\n};\n/**\n * @param {!string} prefix\n * @return {function(...[*])}\n */\nexport var logWrapper = function (prefix) {\n    return function () {\n        var var_args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            var_args[_i] = arguments[_i];\n        }\n        log.apply(void 0, [prefix].concat(var_args));\n    };\n};\n/**\n * @param {...string} var_args\n */\nexport var error = function () {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    if (typeof console !== 'undefined') {\n        var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\n        if (typeof console.error !== 'undefined') {\n            console.error(message);\n        }\n        else {\n            console.log(message);\n        }\n    }\n};\n/**\n * @param {...string} var_args\n */\nexport var fatal = function () {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    var message = buildLogMessage_.apply(void 0, var_args);\n    throw new Error('FIREBASE FATAL ERROR: ' + message);\n};\n/**\n * @param {...*} var_args\n */\nexport var warn = function () {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    if (typeof console !== 'undefined') {\n        var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\n        if (typeof console.warn !== 'undefined') {\n            console.warn(message);\n        }\n        else {\n            console.log(message);\n        }\n    }\n};\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport var warnIfPageIsSecure = function () {\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\n    if (typeof window !== 'undefined' &&\n        window.location &&\n        window.location.protocol &&\n        window.location.protocol.indexOf('https:') !== -1) {\n        warn('Insecure Firebase access from a secure page. ' +\n            'Please use https in calls to new Firebase().');\n    }\n};\n/**\n * @param {!String} methodName\n */\nexport var warnAboutUnsupportedMethod = function (methodName) {\n    warn(methodName +\n        ' is unsupported and will likely change soon.  ' +\n        'Please do not use.');\n};\n/**\n * Returns true if data is NaN, or +/- Infinity.\n * @param {*} data\n * @return {boolean}\n */\nexport var isInvalidJSONNumber = function (data) {\n    return (typeof data === 'number' &&\n        (data != data ||\n            data == Number.POSITIVE_INFINITY ||\n            data == Number.NEGATIVE_INFINITY));\n};\n/**\n * @param {function()} fn\n */\nexport var executeWhenDOMReady = function (fn) {\n    if (isNodeSdk() || document.readyState === 'complete') {\n        fn();\n    }\n    else {\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n        // fire before onload), but fall back to onload.\n        var called_1 = false;\n        var wrappedFn_1 = function () {\n            if (!document.body) {\n                setTimeout(wrappedFn_1, Math.floor(10));\n                return;\n            }\n            if (!called_1) {\n                called_1 = true;\n                fn();\n            }\n        };\n        if (document.addEventListener) {\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\n            // fallback to onload.\n            window.addEventListener('load', wrappedFn_1, false);\n        }\n        else if (document.attachEvent) {\n            // IE.\n            document.attachEvent('onreadystatechange', function () {\n                if (document.readyState === 'complete')\n                    wrappedFn_1();\n            });\n            // fallback to onload.\n            window.attachEvent('onload', wrappedFn_1);\n            // jQuery has an extra hack for IE that we could employ (based on\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n            // I'm hoping we don't need it.\n        }\n    }\n};\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n * @type {!string}\n */\nexport var MIN_NAME = '[MIN_NAME]';\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n * @type {!string}\n */\nexport var MAX_NAME = '[MAX_NAME]';\n/**\n * Compares valid Firebase key names, plus min and max name\n * @param {!string} a\n * @param {!string} b\n * @return {!number}\n */\nexport var nameCompare = function (a, b) {\n    if (a === b) {\n        return 0;\n    }\n    else if (a === MIN_NAME || b === MAX_NAME) {\n        return -1;\n    }\n    else if (b === MIN_NAME || a === MAX_NAME) {\n        return 1;\n    }\n    else {\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\n        if (aAsInt !== null) {\n            if (bAsInt !== null) {\n                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (bAsInt !== null) {\n            return 1;\n        }\n        else {\n            return a < b ? -1 : 1;\n        }\n    }\n};\n/**\n * @param {!string} a\n * @param {!string} b\n * @return {!number} comparison result.\n */\nexport var stringCompare = function (a, b) {\n    if (a === b) {\n        return 0;\n    }\n    else if (a < b) {\n        return -1;\n    }\n    else {\n        return 1;\n    }\n};\n/**\n * @param {string} key\n * @param {Object} obj\n * @return {*}\n */\nexport var requireKey = function (key, obj) {\n    if (obj && key in obj) {\n        return obj[key];\n    }\n    else {\n        throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\n    }\n};\n/**\n * @param {*} obj\n * @return {string}\n */\nexport var ObjectToUniqueKey = function (obj) {\n    if (typeof obj !== 'object' || obj === null)\n        return stringify(obj);\n    var keys = [];\n    for (var k in obj) {\n        keys.push(k);\n    }\n    // Export as json, but with the keys sorted.\n    keys.sort();\n    var key = '{';\n    for (var i = 0; i < keys.length; i++) {\n        if (i !== 0)\n            key += ',';\n        key += stringify(keys[i]);\n        key += ':';\n        key += ObjectToUniqueKey(obj[keys[i]]);\n    }\n    key += '}';\n    return key;\n};\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param {!string} str The string\n * @param {!number} segsize The maximum number of chars in the string.\n * @return {Array.<string>} The string, split into appropriately-sized chunks\n */\nexport var splitStringBySize = function (str, segsize) {\n    var len = str.length;\n    if (len <= segsize) {\n        return [str];\n    }\n    var dataSegs = [];\n    for (var c = 0; c < len; c += segsize) {\n        if (c + segsize > len) {\n            dataSegs.push(str.substring(c, len));\n        }\n        else {\n            dataSegs.push(str.substring(c, c + segsize));\n        }\n    }\n    return dataSegs;\n};\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param {!(Object|Array)} obj The object or array to iterate over\n * @param {function(?, ?)} fn The function to apply\n */\nexport var each = function (obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var i = 0; i < obj.length; ++i) {\n            fn(i, obj[i]);\n        }\n    }\n    else {\n        /**\n         * in the conversion of code we removed the goog.object.forEach\n         * function which did a value,key callback. We standardized on\n         * a single impl that does a key, value callback. So we invert\n         * to not have to touch the `each` code points\n         */\n        forEach(obj, function (key, val) { return fn(val, key); });\n    }\n};\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param {function(*)} callback Callback function.\n * @param {?Object=} context Optional context to bind to.\n * @return {function(*)}\n */\nexport var bindCallback = function (callback, context) {\n    return context ? callback.bind(context) : callback;\n};\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param {!number} v A double\n * @return {string}\n */\nexport var doubleToIEEE754String = function (v) {\n    assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n    var ebits = 11, fbits = 52;\n    var bias = (1 << (ebits - 1)) - 1, s, e, f, ln, i, bits, str;\n    // Compute sign, exponent, fraction\n    // Skip NaN / Infinity handling --MJL.\n    if (v === 0) {\n        e = 0;\n        f = 0;\n        s = 1 / v === -Infinity ? 1 : 0;\n    }\n    else {\n        s = v < 0;\n        v = Math.abs(v);\n        if (v >= Math.pow(2, 1 - bias)) {\n            // Normalized\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n            e = ln + bias;\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n        }\n        else {\n            // Denormalized\n            e = 0;\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n        }\n    }\n    // Pack sign, exponent, fraction\n    bits = [];\n    for (i = fbits; i; i -= 1) {\n        bits.push(f % 2 ? 1 : 0);\n        f = Math.floor(f / 2);\n    }\n    for (i = ebits; i; i -= 1) {\n        bits.push(e % 2 ? 1 : 0);\n        e = Math.floor(e / 2);\n    }\n    bits.push(s ? 1 : 0);\n    bits.reverse();\n    str = bits.join('');\n    // Return the data as a hex string. --MJL\n    var hexByteString = '';\n    for (i = 0; i < 64; i += 8) {\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n        if (hexByte.length === 1)\n            hexByte = '0' + hexByte;\n        hexByteString = hexByteString + hexByte;\n    }\n    return hexByteString.toLowerCase();\n};\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n * @return {boolean}\n */\nexport var isChromeExtensionContentScript = function () {\n    return !!(typeof window === 'object' &&\n        window['chrome'] &&\n        window['chrome']['extension'] &&\n        !/^chrome/.test(window.location.href));\n};\n/**\n * Used to detect if we're in a Windows 8 Store app.\n * @return {boolean}\n */\nexport var isWindowsStoreApp = function () {\n    // Check for the presence of a couple WinRT globals\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n/**\n * Converts a server error code to a Javascript Error\n * @param {!string} code\n * @param {!Query} query\n * @return {Error}\n */\nexport var errorForServerCode = function (code, query) {\n    var reason = 'Unknown Error';\n    if (code === 'too_big') {\n        reason =\n            'The data requested exceeds the maximum size ' +\n                'that can be accessed with a single request.';\n    }\n    else if (code == 'permission_denied') {\n        reason = \"Client doesn't have permission to access the desired data.\";\n    }\n    else if (code == 'unavailable') {\n        reason = 'The service is unavailable';\n    }\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\n    error.code = code.toUpperCase();\n    return error;\n};\n/**\n * Used to test for integer-looking strings\n * @type {RegExp}\n * @private\n */\nexport var INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n * @param {!string} str\n * @return {?number}\n */\nexport var tryParseInt = function (str) {\n    if (INTEGER_REGEXP_.test(str)) {\n        var intVal = Number(str);\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\n            return intVal;\n        }\n    }\n    return null;\n};\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param {!function()} fn The code to guard.\n */\nexport var exceptionGuard = function (fn) {\n    try {\n        fn();\n    }\n    catch (e) {\n        // Re-throw exception when it's safe.\n        setTimeout(function () {\n            // It used to be that \"throw e\" would result in a good console error with\n            // relevant context, but as of Chrome 39, you just get the firebase.js\n            // file/line number where we re-throw it, which is useless. So we log\n            // e.stack explicitly.\n            var stack = e.stack || '';\n            warn('Exception was thrown by user callback.', stack);\n            throw e;\n        }, Math.floor(0));\n    }\n};\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param {?Function=} callback Optional onComplete callback.\n * @param {...*} var_args Arbitrary args to be passed to opt_onComplete\n */\nexport var callUserCallback = function (callback) {\n    var var_args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        var_args[_i - 1] = arguments[_i];\n    }\n    if (typeof callback === 'function') {\n        exceptionGuard(function () {\n            callback.apply(void 0, var_args);\n        });\n    }\n};\n/**\n * @return {boolean} true if we think we're currently being crawled.\n */\nexport var beingCrawled = function () {\n    var userAgent = (typeof window === 'object' &&\n        window['navigator'] &&\n        window['navigator']['userAgent']) ||\n        '';\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n    // believe to support JavaScript/AJAX rendering.\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\n};\n/**\n * Export a property of an object using a getter function.\n *\n * @param {!Object} object\n * @param {string} name\n * @param {!function(): *} fnGet\n */\nexport var exportPropGetter = function (object, name, fnGet) {\n    Object.defineProperty(object, name, { get: fnGet });\n};\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param {Function} fn Function to run.\n * @param {number} time Milliseconds to wait before running.\n * @return {number|Object} The setTimeout() return value.\n */\nexport var setTimeoutNonBlocking = function (fn, time) {\n    var timeout = setTimeout(fn, time);\n    if (typeof timeout === 'object' && timeout['unref']) {\n        timeout['unref']();\n    }\n    return timeout;\n};\n\n\n"]}