{"version":3,"sources":["database/src/database/core/storage/MemoryStorage.ts","database/core/storage/MemoryStorage.js"],"names":["MemoryStorage","cache_","isInMemoryStorage","prototype","set","key","value","get","remove"],"mappings":";;;;;;;AAgBA;;AAEA;;;;;;AAMA,IAAAA,gBAAA,YAAA;AAAA,aAAAA,aAAA,GAAA;AACU,aAAAC,MAAA,GAA+B,EAA/B;AAqBR,aAAAC,iBAAA,GAAoB,IAApB;AACD;AApBCF,kBAAAG,SAAA,CAAAC,GAAA,GAAA,UAAIC,GAAJ,EAAiBC,KAAjB,EAAkC;AAChC,YAAIA,SAAS,IAAb,EAAmB;AACjB,mBAAO,KAAKL,MAAL,CAAYI,GAAZ,CAAP;AACD,SAFD,MAEO;AACL,iBAAKJ,MAAL,CAAYI,GAAZ,IAAmBC,KAAnB;AACD;AACF,KAND;AAQAN,kBAAAG,SAAA,CAAAI,GAAA,GAAA,UAAIF,GAAJ,EAAe;AACb,YAAI,mBAAS,KAAKJ,MAAd,EAAsBI,GAAtB,CAAJ,EAAgC;AAC9B,mBAAO,KAAKJ,MAAL,CAAYI,GAAZ,CAAP;AACD;AACD,eAAO,IAAP;AACD,KALD;AAOAL,kBAAAG,SAAA,CAAAK,MAAA,GAAA,UAAOH,GAAP,EAAkB;AAChB,eAAO,KAAKJ,MAAL,CAAYI,GAAZ,CAAP;AACD,KAFD;AAKF,WAAAL,aAAA;AAvBA,CAAA,EAAA,C,CAxBA;;;;;;;;;;;;;;;QC8CSA,a,GAAAA,a","file":"MemoryStorage.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { contains } from '../../../utils/obj';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n *\n * @constructor\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: any } = {};\n\n  set(key: string, value: any | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): any {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nimport { contains } from '../../../utils/obj';\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n *\n * @constructor\n */\nvar MemoryStorage = (function () {\n    function MemoryStorage() {\n        this.cache_ = {};\n        this.isInMemoryStorage = true;\n    }\n    MemoryStorage.prototype.set = function (key, value) {\n        if (value == null) {\n            delete this.cache_[key];\n        }\n        else {\n            this.cache_[key] = value;\n        }\n    };\n    MemoryStorage.prototype.get = function (key) {\n        if (contains(this.cache_, key)) {\n            return this.cache_[key];\n        }\n        return null;\n    };\n    MemoryStorage.prototype.remove = function (key) {\n        delete this.cache_[key];\n    };\n    return MemoryStorage;\n}());\nexport { MemoryStorage };\n\n\n"]}