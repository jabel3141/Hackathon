{"version":3,"sources":["database/src/database/core/storage/storage.ts"],"names":["createStoragefor","domStorageName","window","domStorage","setItem","removeItem","e","PersistentStorage","SessionStorage"],"mappings":";;;;;;;AAgBA;;AACA;;AAIA;;;;;;;;;AArBA;;;;;;;;;;;;;;;AA8BA,IAAMA,mBAAmB,SAAnBA,gBAAmB,CACvBC,cADuB,EACD;AAEtB,QAAI;AACF;AACA;AACA,YACE,OAAOC,MAAP,KAAkB,WAAlB,IACA,OAAOA,OAAOD,cAAP,CAAP,KAAkC,WAFpC,EAGE;AACA;AACA,gBAAME,aAAaD,OAAOD,cAAP,CAAnB;AACAE,uBAAWC,OAAX,CAAmB,mBAAnB,EAAwC,OAAxC;AACAD,uBAAWE,UAAX,CAAsB,mBAAtB;AACA,mBAAO,yCAAsBF,UAAtB,CAAP;AACD;AACF,KAbD,CAaE,OAAOG,CAAP,EAAU,CAAE;AAEd;AACA;AACA,WAAO,kCAAP;AACD,CArBD;AAuBA;AACO,IAAMC,gDAAoBP,iBAAiB,cAAjB,CAA1B;AAEP;AACO,IAAMQ,0CAAiBR,iBAAiB,gBAAjB,CAAvB","file":"storage.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: any;\n\n/**\n* Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n* TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n* to reflect this type\n*\n* @param {string} domStorageName Name of the underlying storage object\n*   (e.g. 'localStorage' or 'sessionStorage').\n* @return {?} Turning off type information until a common interface is defined.\n*/\nconst createStoragefor = function(\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n"]}