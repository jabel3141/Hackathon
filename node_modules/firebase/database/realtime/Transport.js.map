{"version":3,"sources":["src/database/realtime/Transport.ts","database/realtime/Transport.js"],"names":["Transport","connId","repoInfo","transportSessionId","lastSessionId"],"mappings":";;;;;AAAA;;;;;;;;;;;;;;;AA8BA,IAAAA,YAAA,YAAA;AAmBE;;;;;;;;AAQA,WAAAA,SAAA,CACEC,MADF,EAEEC,QAFF,EAGEC,kBAHF,EAIEC,aAJF,EAIwB,CACpB;AAuBN,SAAAJ,SAAA;AAvDA,CAAA,EAAA;QCFSA,S,GAAAA,S","file":"Transport.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { RepoInfo } from '../core/RepoInfo';\n\nexport interface TransportConstructor {\n  new (\n    connId: string,\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ): Transport;\n  isAvailable: () => boolean;\n  responsesRequiredToBeHealthy?: number;\n  healthyTimeout?: number;\n}\n\nexport abstract class Transport {\n  /**\n   * Bytes received since connection started.\n   * @type {number}\n   */\n  abstract bytesReceived: number;\n\n  /**\n   * Bytes sent since connection started.\n   * @type {number}\n   */\n  abstract bytesSent: number;\n\n  /**\n   * An identifier for this connection, used for logging\n   * @type {string}\n   */\n  abstract connId: string;\n\n  /**\n   *\n   * @param {string} connId An identifier for this connection, used for logging\n   * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\n   * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport session\n   * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\n   * @interface\n   */\n  constructor(\n    connId: string,\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {}\n\n  /**\n   * @param {function(Object)} onMessage Callback when messages arrive\n   * @param {function()} onDisconnect Callback with connection lost.\n   */\n  abstract open(\n    onMessage: (a: Object) => void,\n    onDisconnect: (a?: boolean) => void\n  ): void;\n\n  abstract start(): void;\n\n  abstract close(): void;\n\n  /**\n   * @param {!Object} data The JSON data to transmit\n   */\n  abstract send(data: Object): void;\n\n  abstract markConnectionHealthy(): void;\n\n  abstract markConnectionHealthy(): void;\n}\n\nexport interface TransportConstructor {\n  new (\n    connId: string,\n    RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string\n  );\n}\n","/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar Transport = (function () {\n    /**\n     *\n     * @param {string} connId An identifier for this connection, used for logging\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport session\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\n     * @interface\n     */\n    function Transport(connId, repoInfo, transportSessionId, lastSessionId) {\n    }\n    return Transport;\n}());\nexport { Transport };\n\n\n"]}