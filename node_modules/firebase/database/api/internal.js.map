{"version":3,"sources":["src/database/api/internal.ts"],"names":["forceLongPolling","forceDisallow","forceAllow","forceWebSockets","isWebSocketsAvailable","setSecurityDebugCallback","ref","callback","repo","persistentConnection_","securityDebugCallback_","stats","showDelta","statsIncrementCounter","metric","dataUpdateCount","interceptServerData","interceptServerData_"],"mappings":";;;;;;;AAgBA;;AACA;;AAGA;;;;;;;AApBA;;;;;;;;;;;;;;;AA4BO,IAAMA,8CAAmB,SAAnBA,gBAAmB,GAAA;AAC9B,6CAAoBC,aAApB;AACA,iDAAsBC,UAAtB;AACD,CAHM;AAKA,IAAMC,4CAAkB,SAAlBA,eAAkB,GAAA;AAC7B,iDAAsBF,aAAtB;AACD,CAFM;AAIP;AACO,IAAMG,wDAAwB,SAAxBA,qBAAwB,GAAA;AACnC,WAAO,yCAAoB,aAApB,GAAP;AACD,CAFM;AAIA,IAAMC,8DAA2B,SAA3BA,wBAA2B,CACtCC,GADsC,EAEtCC,QAFsC,EAET;AAE5BD,QAAIE,IAAJ,CAASC,qBAAT,CAAuCC,sBAAvC,GAAgEH,QAAhE;AACF,CALM;AAOA,IAAMI,wBAAQ,SAARA,KAAQ,CAASL,GAAT,EAAyBM,SAAzB,EAA4C;AAC/DN,QAAIE,IAAJ,CAASG,KAAT,CAAeC,SAAf;AACD,CAFM;AAIA,IAAMC,wDAAwB,SAAxBA,qBAAwB,CAASP,GAAT,EAAyBQ,MAAzB,EAAuC;AAC1ER,QAAIE,IAAJ,CAASK,qBAAT,CAA+BC,MAA/B;AACD,CAFM;AAIA,IAAMC,4CAAkB,SAAlBA,eAAkB,CAAST,GAAT,EAAuB;AACpD,WAAOA,IAAIE,IAAJ,CAASO,eAAhB;AACD,CAFM;AAIA,IAAMC,oDAAsB,SAAtBA,mBAAsB,CACjCV,GADiC,EAEjCC,QAFiC,EAEa;AAE9C,WAAOD,IAAIE,IAAJ,CAASS,oBAAT,CAA8BV,QAA9B,CAAP;AACD,CALM","file":"internal.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { Reference } from './Reference';\n\n/**\n * INTERNAL methods for internal-use only (tests, etc.).\n *\n * Customers shouldn't use these or else should be aware that they could break at any time.\n *\n * @const\n */\n\nexport const forceLongPolling = function() {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nexport const forceWebSockets = function() {\n  BrowserPollConnection.forceDisallow();\n};\n\n/* Used by App Manager */\nexport const isWebSocketsAvailable = function(): boolean {\n  return WebSocketConnection['isAvailable']();\n};\n\nexport const setSecurityDebugCallback = function(\n  ref: Reference,\n  callback: (a: Object) => void\n) {\n  (ref.repo.persistentConnection_ as any).securityDebugCallback_ = callback;\n};\n\nexport const stats = function(ref: Reference, showDelta?: boolean) {\n  ref.repo.stats(showDelta);\n};\n\nexport const statsIncrementCounter = function(ref: Reference, metric: string) {\n  ref.repo.statsIncrementCounter(metric);\n};\n\nexport const dataUpdateCount = function(ref: Reference): number {\n  return ref.repo.dataUpdateCount;\n};\n\nexport const interceptServerData = function(\n  ref: Reference,\n  callback: ((a: string, b: any) => void) | null\n) {\n  return ref.repo.interceptServerData_(callback);\n};\n"]}