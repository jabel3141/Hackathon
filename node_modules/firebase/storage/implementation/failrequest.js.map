{"version":3,"sources":["src/storage/implementation/failrequest.ts","storage/implementation/failrequest.js"],"names":["promiseimpl","FailRequest","error","promise_","reject","prototype","getPromise","cancel","appDelete"],"mappings":";;;;;;;AAgBA;;IAAYA,W;;;;AAIZ;;;;;AAKA,IAAAC,cAAA,YAAA;AAGE,aAAAA,WAAA,CAAYC,KAAZ,EAAuC;AACrC,aAAKC,QAAL,GAAgBH,YAAYI,MAAZ,CAAsBF,KAAtB,CAAhB;AACD;AAED;AACAD,gBAAAI,SAAA,CAAAC,UAAA,GAAA,YAAA;AACE,eAAO,KAAKH,QAAZ;AACD,KAFD;AAIA;AACAF,gBAAAI,SAAA,CAAAE,MAAA,GAAA,UAAOC,SAAP,EAAwB;AAAjB,YAAAA,cAAA,KAAA,CAAA,EAAA;AAAAA,wBAAA,KAAA;AAAiB;AAAI,KAA5B;AACF,WAAAP,WAAA;AAdA,CAAA,EAAA;QCLSA,W,GAAAA,W","file":"failrequest.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nimport { FirebaseStorageError } from './error';\nimport * as promiseimpl from './promise_external';\nimport * as RequestExports from './request';\nimport { Request } from './request';\n\n/**\n * A request whose promise always fails.\n * @struct\n * @template T\n */\nexport class FailRequest<T> implements Request<T> {\n  promise_: Promise<T>;\n\n  constructor(error: FirebaseStorageError) {\n    this.promise_ = promiseimpl.reject<T>(error);\n  }\n\n  /** @inheritDoc */\n  getPromise() {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDelete = false) {}\n}\n","import * as promiseimpl from './promise_external';\n/**\n * A request whose promise always fails.\n * @struct\n * @template T\n */\nvar FailRequest = (function () {\n    function FailRequest(error) {\n        this.promise_ = promiseimpl.reject(error);\n    }\n    /** @inheritDoc */\n    FailRequest.prototype.getPromise = function () {\n        return this.promise_;\n    };\n    /** @inheritDoc */\n    FailRequest.prototype.cancel = function (appDelete) {\n        if (appDelete === void 0) { appDelete = false; }\n    };\n    return FailRequest;\n}());\nexport { FailRequest };\n\n\n"]}