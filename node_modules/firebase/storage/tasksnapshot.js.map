{"version":3,"sources":["../src/storage/tasksnapshot.ts","storage/tasksnapshot.js"],"names":["UploadTaskSnapshot","bytesTransferred","totalBytes","state","metadata","task","ref","Object","defineProperty","prototype","get","urls","enumerable","configurable"],"mappings":";;;;;AAqBA,IAAAA,qBAAA,YAAA;AACE,aAAAA,kBAAA,CACWC,gBADX,EAEWC,UAFX,EAGWC,KAHX,EAIWC,QAJX,EAKWC,IALX,EAMWC,GANX,EAMyB;AALd,aAAAL,gBAAA,GAAAA,gBAAA;AACA,aAAAC,UAAA,GAAAA,UAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AACA,aAAAC,QAAA,GAAAA,QAAA;AACA,aAAAC,IAAA,GAAAA,IAAA;AACA,aAAAC,GAAA,GAAAA,GAAA;AACP;AAEJC,WAAAC,cAAA,CAAIR,mBAAAS,SAAJ,EAAI,aAAJ,EAAe;ACrBTC,aDqBN,eAAA;AACE,gBAAI,KAAKN,QAAL,KAAkB,IAAtB,EAA4B;AAC1B,oBAAIO,OAAO,KAAKP,QAAL,CAAc,cAAd,CAAX;AACA,oBAAIO,QAAQ,IAAR,IAAgBA,KAAK,CAAL,KAAW,IAA/B,EAAqC;AACnC,2BAAOA,KAAK,CAAL,CAAP;AACD,iBAFD,MAEO;AACL,2BAAO,IAAP;AACD;AACF,aAPD,MAOO;AACL,uBAAO,IAAP;AACD;AACF,SAXc;ACPTC,oBAAY,IDOH;ACNTC,sBAAc;ADML,KAAf;AAYF,WAAAb,kBAAA;AAtBA,CAAA,EAAA;QCQSA,kB,GAAAA,kB","file":"tasksnapshot.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nimport { TaskState } from './implementation/taskenums';\nimport * as type from './implementation/type';\nimport { Metadata } from './metadata';\nimport { Reference } from './reference';\nimport { UploadTask } from './task';\n\nexport class UploadTaskSnapshot {\n  constructor(\n    readonly bytesTransferred: number,\n    readonly totalBytes: number,\n    readonly state: TaskState,\n    readonly metadata: Metadata | null,\n    readonly task: UploadTask,\n    readonly ref: Reference\n  ) {}\n\n  get downloadURL(): string | null {\n    if (this.metadata !== null) {\n      let urls = this.metadata['downloadURLs'];\n      if (urls != null && urls[0] != null) {\n        return urls[0];\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n","var UploadTaskSnapshot = (function () {\n    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\n        this.bytesTransferred = bytesTransferred;\n        this.totalBytes = totalBytes;\n        this.state = state;\n        this.metadata = metadata;\n        this.task = task;\n        this.ref = ref;\n    }\n    Object.defineProperty(UploadTaskSnapshot.prototype, \"downloadURL\", {\n        get: function () {\n            if (this.metadata !== null) {\n                var urls = this.metadata['downloadURLs'];\n                if (urls != null && urls[0] != null) {\n                    return urls[0];\n                }\n                else {\n                    return null;\n                }\n            }\n            else {\n                return null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return UploadTaskSnapshot;\n}());\nexport { UploadTaskSnapshot };\n\n\n"]}