{"version":3,"sources":["../src/utils/util.ts"],"names":["querystring","querystringParams","params","key","value","Array","isArray","forEach","arrayVal","push","encodeURIComponent","length","join","querystringDecode","obj","tokens","replace","split","token"],"mappings":";;;;;;;AAgBA;;AAEA;;;;;;;;AAQO,IAAMA,oCAAc,SAAdA,WAAc,CAASC,iBAAT,EAA0B;AACnD,QAAIC,SAAS,EAAb;AACA,sBAAQD,iBAAR,EAA2B,UAASE,GAAT,EAAcC,KAAd,EAAmB;AAC5C,YAAIC,MAAMC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;AACxBA,kBAAMG,OAAN,CAAc,UAASC,QAAT,EAAiB;AAC7BN,uBAAOO,IAAP,CACEC,mBAAmBP,GAAnB,IAA0B,GAA1B,GAAgCO,mBAAmBF,QAAnB,CADlC;AAGD,aAJD;AAKD,SAND,MAMO;AACLN,mBAAOO,IAAP,CAAYC,mBAAmBP,GAAnB,IAA0B,GAA1B,GAAgCO,mBAAmBN,KAAnB,CAA5C;AACD;AACF,KAVD;AAWA,WAAOF,OAAOS,MAAP,GAAgB,MAAMT,OAAOU,IAAP,CAAY,GAAZ,CAAtB,GAAyC,EAAhD;AACD,CAdM;AAgBP;;;;;;AA1CA;;;;;;;;;;;;;;;AAgDO,IAAMC,gDAAoB,SAApBA,iBAAoB,CAASb,WAAT,EAAoB;AACnD,QAAIc,MAAM,EAAV;AACA,QAAIC,SAASf,YAAYgB,OAAZ,CAAoB,KAApB,EAA2B,EAA3B,EAA+BC,KAA/B,CAAqC,GAArC,CAAb;AAEAF,WAAOR,OAAP,CAAe,UAASW,KAAT,EAAc;AAC3B,YAAIA,KAAJ,EAAW;AACT,gBAAIf,MAAMe,MAAMD,KAAN,CAAY,GAAZ,CAAV;AACAH,gBAAIX,IAAI,CAAJ,CAAJ,IAAcA,IAAI,CAAJ,CAAd;AACD;AACF,KALD;AAMA,WAAOW,GAAP;AACD,CAXM","file":"util.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { forEach } from './obj';\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\n * object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n *\n * @param {!Object} querystringParams\n * @return {string}\n */\nexport const querystring = function(querystringParams) {\n  var params = [];\n  forEach(querystringParams, function(key, value) {\n    if (Array.isArray(value)) {\n      value.forEach(function(arrayVal) {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  });\n  return params.length ? '&' + params.join('&') : '';\n};\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\n *\n * @param {string} querystring\n * @return {!Object}\n */\nexport const querystringDecode = function(querystring) {\n  var obj = {};\n  var tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(function(token) {\n    if (token) {\n      var key = token.split('=');\n      obj[key[0]] = key[1];\n    }\n  });\n  return obj;\n};\n"]}