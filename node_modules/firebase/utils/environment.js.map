{"version":3,"sources":["../src/utils/environment.ts"],"names":["getUA","navigator","isMobileCordova","window","test","isReactNative","isNodeSdk","NODE_CLIENT","NODE_ADMIN"],"mappings":";;;;;;;8QAAA;;;;;;;;;;;;;;;;;AAgBA;;AAEA;;;;AAIO,IAAMA,wBAAQ,SAARA,KAAQ,GAAA;AACnB,QACE,OAAOC,SAAP,KAAqB,WAArB,IACA,OAAOA,UAAU,WAAV,CAAP,KAAkC,QAFpC,EAGE;AACA,eAAOA,UAAU,WAAV,CAAP;AACD,KALD,MAKO;AACL,eAAO,EAAP;AACD;AACF,CATM;AAWP;;;;;;;;AAQO,IAAMC,4CAAkB,SAAlBA,eAAkB,GAAA;AAC7B,WACE,OAAOC,MAAP,KAAkB,WAAlB,IACA,CAAC,EAAEA,OAAO,SAAP,KAAqBA,OAAO,UAAP,CAArB,IAA2CA,OAAO,UAAP,CAA7C,CADD,IAEA,oDAAoDC,IAApD,CAAyDJ,OAAzD,CAHF;AAKD,CANM;AAQP;;;;;AAKO,IAAMK,wCAAgB,SAAhBA,aAAgB,GAAA;AAC3B,WACE,QAAOJ,SAAP,yCAAOA,SAAP,OAAqB,QAArB,IAAiCA,UAAU,SAAV,MAAyB,aAD5D;AAGD,CAJM;AAMP;;;;;AAKO,IAAMK,gCAAY,SAAZA,SAAY,GAAA;AACvB,WAAO,qBAAUC,WAAV,KAA0B,IAA1B,IAAkC,qBAAUC,UAAV,KAAyB,IAAlE;AACD,CAFM","file":"environment.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return {string} user agent string\n */\nexport const getUA = function() {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n};\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\n * Cordova `onDeviceReady`, which would normally wait for a callback.\n *\n * @return {boolean} isMobileCordova\n */\nexport const isMobileCordova = function() {\n  return (\n    typeof window !== 'undefined' &&\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n};\n\n/**\n * Detect React Native.\n *\n * @return {boolean} True if ReactNative environment is detected.\n */\nexport const isReactNative = function() {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n};\n\n/**\n * Detect Node.js.\n *\n * @return {boolean} True if Node.js environment is detected.\n */\nexport const isNodeSdk = function() {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n};\n"]}