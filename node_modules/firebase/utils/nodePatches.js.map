{"version":3,"sources":["../src/utils/nodePatches.ts"],"names":["Buffer","NODE_CLIENT","version","process","Writable","require","chunk","encoding","cb","state","ret","writeAfterEnd","validChunk","writeOrBuffer","stream","er","Error","valid","undefined","TypeError","decodeChunk","len","WriteReq","doWrite","Duplex","request","nodeRestRequest","req","onComplete","error","response","body","url","prototype","doNodeLongPoll","loadCB","self","forever","evalBody","jsonpCB","eval","commandCB","onMessageCB"],"mappings":";;AAgBA;;AACA;;AACA;;AACA;;AAKA;;AAEA,yBAAcA,MAAd,E,CA1BA;;;;;;;;;;;;;;;;AA2BA;AAEA;AACA,qBAAUC,WAAV,GAAwB,IAAxB;AAEA;;;AAGA,CAAC,YAAA;AACC,QAAIC,UAAUC,QAAQ,SAAR,CAAd;AACA,QACED,YAAY,UAAZ,IACAA,YAAY,UADZ,IAEAA,YAAY,UAHd,EAKE;AACF;;;;;;;AAOA,QAAIE,WAAWC,QAAQ,kBAAR,CAAf;AAEAD,aAAS,WAAT,EAAsB,OAAtB,IAAiC,UAASE,KAAT,EAAgBC,QAAhB,EAA0BC,EAA1B,EAA4B;AAC3D,YAAIC,QAAQ,KAAK,gBAAL,CAAZ;AACA,YAAIC,MAAM,KAAV;AAEA,YAAI,OAAOH,QAAP,KAAoB,UAAxB,EAAoC;AAClCC,iBAAKD,QAAL;AACAA,uBAAW,IAAX;AACD;AAED,YAAIP,OAAO,UAAP,EAAmBM,KAAnB,CAAJ,EAA+BC,WAAW,QAAX,CAA/B,KACK,IAAI,CAACA,QAAL,EAAeA,WAAWE,MAAM,iBAAN,CAAX;AAEpB,YAAI,OAAOD,EAAP,KAAc,UAAlB,EAA8BA,KAAK,cAAA,CAAa,CAAlB;AAE9B,YAAIC,MAAM,OAAN,CAAJ,EAAoBE,cAAc,IAAd,EAAoBF,KAApB,EAA2BD,EAA3B,EAApB,KACK,IAAII,WAAW,IAAX,EAAiBH,KAAjB,EAAwBH,KAAxB,EAA+BE,EAA/B,CAAJ,EACHE,MAAMG,cAAc,IAAd,EAAoBJ,KAApB,EAA2BH,KAA3B,EAAkCC,QAAlC,EAA4CC,EAA5C,CAAN;AAEF,eAAOE,GAAP;AACD,KAnBD;AAqBA,aAAAC,aAAA,CAAuBG,MAAvB,EAA+BL,KAA/B,EAAsCD,EAAtC,EAAwC;AACtC,YAAIO,KAAK,IAAIC,KAAJ,CAAU,iBAAV,CAAT;AACA;AACAF,eAAO,MAAP,EAAe,OAAf,EAAwBC,EAAxB;AACAZ,gBAAQ,UAAR,EAAoB,YAAA;AAClBK,eAAGO,EAAH;AACD,SAFD;AAGD;AAED,aAAAH,UAAA,CAAoBE,MAApB,EAA4BL,KAA5B,EAAmCH,KAAnC,EAA0CE,EAA1C,EAA4C;AAC1C,YAAIS,QAAQ,IAAZ;AACA,YACE,CAACjB,OAAO,UAAP,EAAmBM,KAAnB,CAAD,IACA,aAAa,OAAOA,KADpB,IAEAA,UAAU,IAFV,IAGAA,UAAUY,SAHV,IAIA,CAACT,MAAM,YAAN,CALH,EAME;AACA,gBAAIM,KAAK,IAAII,SAAJ,CAAc,iCAAd,CAAT;AACAL,mBAAO,MAAP,EAAe,OAAf,EAAwBC,EAAxB;AACAZ,oBAAQ,UAAR,EAAoB,YAAA;AAClBK,mBAAGO,EAAH;AACD,aAFD;AAGAE,oBAAQ,KAAR;AACD;AACD,eAAOA,KAAP;AACD;AAED,aAAAJ,aAAA,CAAuBC,MAAvB,EAA+BL,KAA/B,EAAsCH,KAAtC,EAA6CC,QAA7C,EAAuDC,EAAvD,EAAyD;AACvDF,gBAAQc,YAAYX,KAAZ,EAAmBH,KAAnB,EAA0BC,QAA1B,CAAR;AACA,YAAIP,OAAO,UAAP,EAAmBM,KAAnB,CAAJ,EAA+BC,WAAW,QAAX;AAC/B,YAAIc,MAAMZ,MAAM,YAAN,IAAsB,CAAtB,GAA0BH,MAAM,QAAN,CAApC;AAEAG,cAAM,QAAN,KAAmBY,GAAnB;AAEA,YAAIX,MAAMD,MAAM,QAAN,IAAkBA,MAAM,eAAN,CAA5B;AACA;AACA,YAAI,CAACC,GAAL,EAAUD,MAAM,WAAN,IAAqB,IAArB;AAEV,YAAIA,MAAM,SAAN,CAAJ,EACEA,MAAM,QAAN,EAAgB,MAAhB,EAAwB,IAAIa,QAAJ,CAAahB,KAAb,EAAoBC,QAApB,EAA8BC,EAA9B,CAAxB,EADF,KAEKe,QAAQT,MAAR,EAAgBL,KAAhB,EAAuBY,GAAvB,EAA4Bf,KAA5B,EAAmCC,QAAnC,EAA6CC,EAA7C;AAEL,eAAOE,GAAP;AACD;AAED,aAAAU,WAAA,CAAqBX,KAArB,EAA4BH,KAA5B,EAAmCC,QAAnC,EAA2C;AACzC,YACE,CAACE,MAAM,YAAN,CAAD,IACAA,MAAM,eAAN,MAA2B,KAD3B,IAEA,OAAOH,KAAP,KAAiB,QAHnB,EAIE;AACAA,oBAAQ,IAAIN,MAAJ,CAAWM,KAAX,EAAkBC,QAAlB,CAAR;AACD;AACD,eAAOD,KAAP;AACD;AAED;;;AAGA,aAAAgB,QAAA,CAAkBhB,KAAlB,EAAyBC,QAAzB,EAAmCC,EAAnC,EAAqC;AACnC,aAAK,OAAL,IAAgBF,KAAhB;AACA,aAAK,UAAL,IAAmBC,QAAnB;AACA,aAAK,UAAL,IAAmBC,EAAnB;AACD;AAED,aAAAe,OAAA,CAAiBT,MAAjB,EAAyBL,KAAzB,EAAgCY,GAAhC,EAAqCf,KAArC,EAA4CC,QAA5C,EAAsDC,EAAtD,EAAwD;AACtDC,cAAM,UAAN,IAAoBY,GAApB;AACAZ,cAAM,SAAN,IAAmBD,EAAnB;AACAC,cAAM,SAAN,IAAmB,IAAnB;AACAA,cAAM,MAAN,IAAgB,IAAhB;AACAK,eAAO,QAAP,EAAiBR,KAAjB,EAAwBC,QAAxB,EAAkCE,MAAM,SAAN,CAAlC;AACAA,cAAM,MAAN,IAAgB,KAAhB;AACD;AAED,QAAIe,SAASnB,QAAQ,gBAAR,CAAb;AACAmB,WAAO,WAAP,EAAoB,OAApB,IAA+BpB,SAAS,WAAT,EAAsB,OAAtB,CAA/B;AACD,CAnHD;AAqHA;;;AAGC,kDAAmCqB,OAAnC,GAA6C,IAA7C;AAED;;;;AAIC,kDAAmCC,eAAnC,GAAqD,UACpDC,GADoD,EAEpDC,UAFoD,EAE1C;AAEV,QAAI,CAAE,kDAAmCH,OAAzC,EACG,kDAAmCA,OAAnC,GAAuIpB,QAAQ,SAAR,CAAvI;AAEF,sDAAmCoB,OAAnC,CAA2CE,GAA3C,EAAgD,UAC/CE,KAD+C,EAE/CC,QAF+C,EAG/CC,IAH+C,EAG3C;AAEJ,YAAIF,KAAJ,EAAW,MAAM,sBAAsBF,IAAIK,GAA1B,GAAgC,UAAtC;AAEX,YAAIJ,UAAJ,EAAgBA,WAAWG,IAAX;AACjB,KARA;AASF,CAhBA;AAkBD;;;;AAIM,kDAA2BE,SAA3B,CAAsCC,cAAtC,GAAuD,UAC3DF,GAD2D,EAE3DG,MAF2D,EAErD;AAEN,QAAIC,OAAO,IAAX;AACC,sDAAmCV,eAAnC,CACC,EAAEM,KAAKA,GAAP,EAAYK,SAAS,IAArB,EADD,EAEC,UAASN,IAAT,EAAa;AACXK,aAAKE,QAAL,CAAcP,IAAd;AACAI;AACD,KALF;AAOF,CAZK;AAcN;;;;AAIM,kDAA2BF,SAA3B,CAAsCK,QAAtC,GAAiD,UAASP,IAAT,EAAa;AAClE,QAAIQ,OAAJ;AACA;AACAC,SACE,mFAEE,IAFF,2DAIE,KAJF,GAKET,IALF,GAME,GAPJ;AASAQ,YAAQ,KAAKE,SAAb,EAAwB,KAAKC,WAA7B;AACD,CAbK","file":"nodePatches.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { CONSTANTS } from './constants';\nimport { setWebSocketImpl } from '../database/realtime/WebSocketConnection';\nimport { setBufferImpl } from '../database/core/util/util';\nimport {\n  FirebaseIFrameScriptHolder,\n  FIREBASE_LONGPOLL_COMMAND_CB_NAME,\n  FIREBASE_LONGPOLL_DATA_CB_NAME\n} from '../database/realtime/BrowserPollConnection';\nimport { Client } from 'faye-websocket';\n\nsetBufferImpl(Buffer);\nsetWebSocketImpl(Client);\n\n// Overriding the constant (we should be the only ones doing this)\nCONSTANTS.NODE_CLIENT = true;\n\n/**\n * @suppress {es5Strict}\n */\n(function() {\n  var version = process['version'];\n  if (\n    version !== 'v0.10.22' &&\n    version !== 'v0.10.23' &&\n    version !== 'v0.10.24'\n  )\n    return;\n  /**\n   * The following duplicates much of `/lib/_stream_writable.js` at\n   * b922b5e90d2c14dd332b95827c2533e083df7e55, applying the fix for\n   * https://github.com/joyent/node/issues/6506. Note that this fix also\n   * needs to be applied to `Duplex.prototype.write()` (in\n   * `/lib/_stream_duplex.js`) as well.\n   */\n  var Writable = require('_stream_writable');\n\n  Writable['prototype']['write'] = function(chunk, encoding, cb) {\n    var state = this['_writableState'];\n    var ret = false;\n\n    if (typeof encoding === 'function') {\n      cb = encoding;\n      encoding = null;\n    }\n\n    if (Buffer['isBuffer'](chunk)) encoding = 'buffer';\n    else if (!encoding) encoding = state['defaultEncoding'];\n\n    if (typeof cb !== 'function') cb = function() {};\n\n    if (state['ended']) writeAfterEnd(this, state, cb);\n    else if (validChunk(this, state, chunk, cb))\n      ret = writeOrBuffer(this, state, chunk, encoding, cb);\n\n    return ret;\n  };\n\n  function writeAfterEnd(stream, state, cb) {\n    var er = new Error('write after end');\n    // TODO: defer error events consistently everywhere, not just the cb\n    stream['emit']('error', er);\n    process['nextTick'](function() {\n      cb(er);\n    });\n  }\n\n  function validChunk(stream, state, chunk, cb) {\n    var valid = true;\n    if (\n      !Buffer['isBuffer'](chunk) &&\n      'string' !== typeof chunk &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state['objectMode']\n    ) {\n      var er = new TypeError('Invalid non-string/buffer chunk');\n      stream['emit']('error', er);\n      process['nextTick'](function() {\n        cb(er);\n      });\n      valid = false;\n    }\n    return valid;\n  }\n\n  function writeOrBuffer(stream, state, chunk, encoding, cb) {\n    chunk = decodeChunk(state, chunk, encoding);\n    if (Buffer['isBuffer'](chunk)) encoding = 'buffer';\n    var len = state['objectMode'] ? 1 : chunk['length'];\n\n    state['length'] += len;\n\n    var ret = state['length'] < state['highWaterMark'];\n    // we must ensure that previous needDrain will not be reset to false.\n    if (!ret) state['needDrain'] = true;\n\n    if (state['writing'])\n      state['buffer']['push'](new WriteReq(chunk, encoding, cb));\n    else doWrite(stream, state, len, chunk, encoding, cb);\n\n    return ret;\n  }\n\n  function decodeChunk(state, chunk, encoding) {\n    if (\n      !state['objectMode'] &&\n      state['decodeStrings'] !== false &&\n      typeof chunk === 'string'\n    ) {\n      chunk = new Buffer(chunk, encoding);\n    }\n    return chunk;\n  }\n\n  /**\n   * @constructor\n   */\n  function WriteReq(chunk, encoding, cb) {\n    this['chunk'] = chunk;\n    this['encoding'] = encoding;\n    this['callback'] = cb;\n  }\n\n  function doWrite(stream, state, len, chunk, encoding, cb) {\n    state['writelen'] = len;\n    state['writecb'] = cb;\n    state['writing'] = true;\n    state['sync'] = true;\n    stream['_write'](chunk, encoding, state['onwrite']);\n    state['sync'] = false;\n  }\n\n  var Duplex = require('_stream_duplex');\n  Duplex['prototype']['write'] = Writable['prototype']['write'];\n})();\n\n/**\n * @type {?function({url: string, forever: boolean}, function(Error, number, string))}\n */\n(FirebaseIFrameScriptHolder as any).request = null;\n\n/**\n * @param {{url: string, forever: boolean}} req\n * @param {function(string)=} onComplete\n */\n(FirebaseIFrameScriptHolder as any).nodeRestRequest = function(\n  req,\n  onComplete\n) {\n  if (!(FirebaseIFrameScriptHolder as any).request)\n    (FirebaseIFrameScriptHolder as any).request = /** @type {function({url: string, forever: boolean}, function(Error, number, string))} */ require('request');\n\n  (FirebaseIFrameScriptHolder as any).request(req, function(\n    error,\n    response,\n    body\n  ) {\n    if (error) throw 'Rest request for ' + req.url + ' failed.';\n\n    if (onComplete) onComplete(body);\n  });\n};\n\n/**\n * @param {!string} url\n * @param {function()} loadCB\n */\n(<any>FirebaseIFrameScriptHolder.prototype).doNodeLongPoll = function(\n  url,\n  loadCB\n) {\n  var self = this;\n  (FirebaseIFrameScriptHolder as any).nodeRestRequest(\n    { url: url, forever: true },\n    function(body) {\n      self.evalBody(body);\n      loadCB();\n    }\n  );\n};\n\n/**\n * Evaluates the string contents of a jsonp response.\n * @param {!string} body\n */\n(<any>FirebaseIFrameScriptHolder.prototype).evalBody = function(body) {\n  var jsonpCB;\n  //jsonpCB is externed in firebase-extern.js\n  eval(\n    'jsonpCB = function(' +\n      FIREBASE_LONGPOLL_COMMAND_CB_NAME +\n      ', ' +\n      FIREBASE_LONGPOLL_DATA_CB_NAME +\n      ') {' +\n      body +\n      '}'\n  );\n  jsonpCB(this.commandCB, this.onMessageCB);\n};\n"]}