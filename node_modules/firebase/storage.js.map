{"version":3,"sources":["../../src/storage.ts"],"names":["registerStorage","STORAGE_TYPE","factory","app","unused","opt_url","instance","namespaceExports","TaskState","TaskEvent","StringFormat","Storage","Reference","INTERNAL","registerService","undefined"],"mappings":";;;;;QAgCMA,e,GAAAA,e;;AAjBN;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;AAEA;;;AAGA,IAAMC,eAAe,SAArB,C,CA1BA;;;;;;;;;;;;;;;;AA4BA,SAAAC,OAAA,CAAiBC,GAAjB,EAAmCC,MAAnC,EAAgDC,OAAhD,EAAgE;AAC9D,WAAO,qBAAYF,GAAZ,EAAiB,0BAAjB,EAAkCE,OAAlC,CAAP;AACD;AAEK,SAAAL,eAAA,CAA0BM,QAA1B,EAAkC;AACtC,QAAIC,mBAAmB;AACrB;AACAC,uCAFqB;AAGrBC,uCAHqB;AAIrBC,0CAJqB;AAKrBC,iCALqB;AAMrBC;AANqB,KAAvB;AAQAN,aAASO,QAAT,CAAkBC,eAAlB,CACEb,YADF,EAEEC,OAFF,EAGEK,gBAHF,EAIEQ,SAJF;AAKE;AACA,QANF;AAQD;AAEDf","file":"storage.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nimport { StringFormat } from './storage/implementation/string';\nimport { TaskEvent } from './storage/implementation/taskenums';\nimport { TaskState } from './storage/implementation/taskenums';\nimport { XhrIoPool } from './storage/implementation/xhriopool';\nimport { Reference } from './storage/reference';\nimport { Service } from './storage/service';\nimport firebase from './app';\nimport { FirebaseApp, FirebaseServiceFactory } from './app/firebase_app';\n/**\n * Type constant for Firebase Storage.\n */\nconst STORAGE_TYPE = 'storage';\n\nfunction factory(app: FirebaseApp, unused: any, opt_url?: string): Service {\n  return new Service(app, new XhrIoPool(), opt_url);\n}\n\nexport function registerStorage(instance) {\n  let namespaceExports = {\n    // no-inline\n    TaskState: TaskState,\n    TaskEvent: TaskEvent,\n    StringFormat: StringFormat,\n    Storage: Service,\n    Reference: Reference\n  };\n  instance.INTERNAL.registerService(\n    STORAGE_TYPE,\n    factory as FirebaseServiceFactory,\n    namespaceExports,\n    undefined,\n    // Allow multiple storage instances per app.\n    true\n  );\n}\n\nregisterStorage(firebase);\n"]}